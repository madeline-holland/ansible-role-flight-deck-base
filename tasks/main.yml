---
- name: Create groups.
  shell: >
    addgroup
    {% if item.gid | default(false) %}-g {{ item.gid | int }}{% endif %}
    {% if item.system | default(false) %}-S{% endif %}
    {{ item.name }}
  loop: "{{ flightdeck_groups }}"

- name: Create the container users.
  shell: >
    adduser -G {{ item.group | default(item.name) }}
    -D
    -h {{ item.home | default('/home/' + item.name) }}
    -s {{ item.shell | default('/bin/bash') }}
    {% if item.uid | default(false) %}-u {{ item.uid | int }}{% endif %}
    {% if item.system | default(false) %}-S{% endif %}
    {{ item.name }}
  loop: "{{ flightdeck_users }}"

- name: Add users to secondary groups.
  shell: >
    {% for _group in item.groups | default([]) %}
    addgroup {{ item.name }} {{ _group }} &&
    {% endfor %}
    true
  loop: "{{ flightdeck_users }}"

- name: Install base utlities.
  apk:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop: "{{ flightdeck_base_packages }}"
  notify:
    - clear apk cache

- name: Deploy key scripts.
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "root"
    group: "root"
    mode: "u=rx,g=rx,o=rx"
  loop:
    - src: "templates/docker-entrypoint.sh.j2"
      dest: "/usr/local/bin/docker-entrypoint.sh"
    - src: "templates/docker-cmd.sh.j2"
      dest: "/usr/local/bin/docker-cmd.sh"
    - src: "templates/motd.j2"
      dest: "/etc/motd"
    - src: "templates/vim.j2"
      dest: "/usr/bin/vim"

- name: Write the root .bashrc file
  copy:
    dest: "/root/.bashrc"
    content: |
      PS1="{{ flightdeck_root_prompt }}"
    owner: "root"
    group: "root"
    mode: "u=rx,g=rx,o="

- name: Write the service account .bashrc file
  copy:
    dest: "{{ item.home | default('/home/' + item.name) }}/.bashrc"
    content: |
      PS1="{{ flightdeck_user_prompt }}"
      cd $HOME
      cat /etc/motd
      {% if flightdeck_path | length > 0 %}export PATH=$PATH:{{ flightdeck_path | join(':') }}{% endif %}

      {% for _envvar in flightdeck_env %}
      export {{ _envvar.name }}='{{ _envvar.value | regex_replace("'", "\'") }}'
      {% endfor %}
    owner: "{{ item.name }}"
    group: "{{ item.group | default(item.name) }}"
    mode: "u=rx,g=rx,o="
  loop: "{{ flightdeck_users }}"

- name: Write the service account .bash_profile file
  copy:
    dest: "{{ item.home | default('/home/' + item.name) }}/.bash_profile"
    content: |
      PS1="{{ flightdeck_user_prompt }}"
      cd $HOME
      cat /etc/motd
      {% if flightdeck_path | length > 0 %}export PATH=$PATH:{{ flightdeck_path | join(':') }}{% endif %}

      {% for _envvar in flightdeck_env %}
      export {{ _envvar.name }}='{{ _envvar.value | regex_replace("'", "\'") }}'
      {% endfor %}
      {% if flightdeck_entrypath %}
      cd {{ flightdeck_entrypath }}
      {% endif %}
    owner: "{{ item.name }}"
    group: "{{ item.group | default(item.name) }}"
    mode: "u=rx,g=rx,o="
  loop: "{{ flightdeck_users }}"

- name: Add items to PATH
  lineinfile:
    dest: "/etc/profile"
    regexp: "^export PATH="
    line: "export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:{{ flightdeck_path | join(':') }}"
  when:
    - flightdeck_path | length > 0

- name: Add env vars to /etc/profile
  lineinfile:
    dest: "/etc/profile"
    regexp: "^export {{ item.name }}="
    line: |
      export {{ item.name }}='{{ item.value | regex_replace("'", "\'") }}'
  loop: "{{ flightdeck_env }}"
